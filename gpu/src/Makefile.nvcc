
# Definition of MACROS

BINROOT=./
EXE=libgpu.so
SHELL=/bin/sh
CXX = g++
CXXFLAGS=
FC=gfortran
FCFLAGS=
LD = $(CXX)
LDFLAGS = -fPIC -shared
AR = ar rcs
CPP = cpp -P -traditional
INSTALL=../

CUDA_CXX = nvcc
CUDA_CXXFLAGS = 

ARCH ?= polaris-gnu
include arch/$(ARCH)

# -- subset of src files with cuda kernels
CUDA_SRC = pm_cuda.cpp device_cuda.cpp
CUDA_OBJ = $(CUDA_SRC:.cpp=.o)

CSRC = $(filter-out $(CUDA_SRC), $(wildcard *.cpp))
INC = $(wildcard *.h)
COBJ = $(CSRC:.cpp=.o)

FSRC = $(wildcard *.F)
MOD = $(FSRC:.F=.mod)
FOBJ = $(FSRC:.F=.o)

#
# -- target : 	Dependencies
# --		Rule to create target

$(EXE): $(COBJ) $(CUDA_OBJ) $(FOBJ) $(MOD)
	$(LD) $(LDFLAGS) -o $@ $(COBJ) $(CUDA_OBJ) $(LIB)

install: $(EXE)
	 cp $(EXE) $(INSTALL)
#	 cp $(MOD) $(FOBJ) $(INSTALL)/include

####################################################################

$(COBJ): %.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $<

$(FOBJ): %.o: %.F90
	$(FC) $(FCFLAGS) -c $<

$(MOD): %.mod: %.F90
	$(FC) $(FCFLAGS) -c $<

$(CUDA_OBJ): %.o: %.cpp
	$(CUDA_CXX) -x cu $(CUDA_CXXFLAGS) -c $< -o $@

#
# -- Remove *.o and *~ from the directory
clean:
	rm -f *.o *.mod *~ ./$(EXE)
	rm -f $(INSTALL)/$(EXE)
	rm -rf $(EXE).dSYM
#
# -- Remove *.o, *~, and executable from the directory
realclean:
	rm -f *.o *.mod *~ ./$(EXE)
	rm -f $(INSTALL)/$(EXE)
	rm -rf $(EXE).dSYM
	rm -f *.optrpt

#
# -- Simple dependencies

libgpu.o : libgpu.cpp
libgpu.o : libgpu.h

pm_cuda.o : pm_cuda.cpp
pm_cuda.o : pm_cuda.h

device_cuda.o : device_cuda.cpp
device_cuda.o : device.h
device.o : device.h
